{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","transform","nextPictures","setState","props","step","itemWidth","prevPictures","this","images","frameSize","animationDuration","maxTransform","length","className","style","width","map","image","index","src","alt","height","transition","type","onClick","disabled","React","Component","App","addCustomPropetries","event","preventDefault","data","FormData","currentTarget","Number","get","reset","onSubmit","htmlFor","id","name","defaultValue","min","max","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1804a3ff.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n};\n\ntype State = {\n  transform: number;\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    transform: 0,\n  };\n\n  nextPictures = () => {\n    this.setState(state => ({\n      transform: state.transform - (this.props.step * this.props.itemWidth),\n    }));\n  };\n\n  prevPictures = () => {\n    this.setState(state => ({\n      transform: state.transform + (this.props.step * this.props.itemWidth),\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    const { transform } = this.state;\n\n    const containerWidth = images.length * itemWidth;\n    const maxTransform = -(containerWidth - step * itemWidth);\n\n    return (\n      <div className=\"Carousel\">\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            width: `${frameSize * itemWidth}px`,\n          }}\n        >\n          {images.map((image, index) => (\n            <li key={image}>\n              <img\n                src={image}\n                alt={`${index + 1}`}\n                width={itemWidth}\n                height={itemWidth}\n                style={{\n                  transform: `translateX(${transform}px)`,\n                  transition: `${animationDuration}ms`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          {/* eslint-disable-next-line react/self-closing-comp */}\n          <button\n            type=\"button\"\n            className=\"Carousel__button Carousel__button--left\"\n            onClick={this.prevPictures}\n            disabled={transform >= 0}\n          >\n          </button>\n\n          {/* eslint-disable-next-line react/self-closing-comp */}\n          <button\n            type=\"button\"\n            data-cy=\"next\"\n            className=\"Carousel__button Carousel__button--right\"\n            onClick={this.nextPictures}\n            disabled={transform <= maxTransform}\n          >\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n  };\n\n  addCustomPropetries = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    this.setState({\n      step: Number(data.get('step')),\n      frameSize: Number(data.get('frameSize')),\n      itemWidth: Number(data.get('itemWidth')),\n      animationDuration: Number(data.get('animationDuration')),\n    });\n\n    event.currentTarget.reset();\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n        />\n\n        <form className=\"App__form\" onSubmit={this.addCustomPropetries}>\n          <label className=\"App__label\" htmlFor=\"itemId\">\n            Write the size of the image:\n            <input\n              type=\"number\"\n              id=\"itemId\"\n              name=\"itemWidth\"\n              className=\"App__input\"\n              defaultValue={130}\n            />\n          </label>\n\n          <label className=\"App__label\" htmlFor=\"frameId\">\n            Write the number of images displayed at the same time:\n            <input\n              type=\"number\"\n              id=\"frameId\"\n              name=\"frameSize\"\n              className=\"App__input\"\n              defaultValue={3}\n              min={1}\n              max={10}\n            />\n          </label>\n\n          <label className=\"App__label\" htmlFor=\"stepId\">\n            Write the number of images scrolled per click:\n            <input\n              type=\"number\"\n              id=\"stepId\"\n              name=\"step\"\n              className=\"App__input\"\n              defaultValue={3}\n              min={1}\n              max={10}\n            />\n          </label>\n\n          <label className=\"App__label\">\n            Write time in ms to show the new portion of images:\n            <input\n              type=\"number\"\n              name=\"animationDuration\"\n              className=\"App__input\"\n              defaultValue={1000}\n            />\n          </label>\n\n          <button type=\"submit\" className=\"App__button\">Apply changes</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}